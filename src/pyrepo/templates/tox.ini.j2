{% if has_tests or has_typing or has_docs %}
[tox]
{% if has_tests or has_typing %}
envlist = lint{% if has_typing %},typing{% endif %}{% if has_tests %}{% for v in python_versions %},{{v.pyenv}}{% endfor %}{% if supports_pypy %}{% for v in python_versions|major_pypy_supported %},pypy{{v}}{% endfor %}{% endif %}{% endif +%}
{% if has_tests %}
skip_missing_interpreters = True
{% endif %}
{% endif %}
isolated_build = True
minversion = 3.3.0
{% endif %}
{% if has_tests %}

[testenv]
deps =
    {% if has_doctests %}
    coverage
    {% endif %}
    pytest
    {% if not has_doctests %}
    pytest-cov
    {% endif %}
commands =
{% if has_doctests %}
    coverage erase
    coverage run -m pytest {posargs} --doctest-modules --pyargs {{import_name}}
    coverage run -m pytest {posargs} test
    coverage combine
    coverage report
{% else %}
    pytest {posargs} test
{% endif %}
{% endif %}
{% if has_tests or has_typing %}

[testenv:lint]
skip_install = True
deps =
    flake8
    flake8-bugbear
    flake8-builtins
    flake8-unused-arguments
commands =
    flake8 {% if is_flat_module %}{{import_name}}.py{% else %}src{% endif %}{% if has_tests %} test{% endif +%}
{% endif %}
{% if has_typing %}

{% block testenv_typing %}
[testenv:typing]
deps =
    mypy
    {% if has_tests %}
    {[testenv]deps}
    {% endif %}
commands =
    mypy {% if is_flat_module %}{{import_name}}.py{% else %}src{% endif %}{% if has_tests %} test{% endif +%}
{% endblock %}
{% endif %}
{% if has_tests %}

[pytest]
{% if not has_doctests %}
addopts = --cov={{import_name}} --no-cov-on-fail
{% endif %}
filterwarnings = error
norecursedirs = test/data

[coverage:run]
branch = True
parallel = True
{% if has_doctests %}
source = {{import_name}}
{% endif %}

[coverage:paths]
source =
{% if is_flat_module %}
    {{import_name}}.py
    .tox/**/site-packages/{{import_name}}.py
{% else %}
    src
    .tox/**/site-packages
{% endif %}

[coverage:report]
precision = 2
show_missing = True
exclude_lines =
    pragma: no cover
    if TYPE_CHECKING:
    \.\.\.
{% endif %}
{% if has_tests or has_typing or has_docs %}

{% endif %}
[flake8]
doctests = True
extend-exclude = build/,dist/,test/data,venv/
max-doc-length = 100
max-line-length = 80
unused-arguments-ignore-stub-functions = True
extend-select = B901,B902,B950
ignore = A003,B005,E203,E262,E266,E501,U101,W503

[isort]
atomic = True
force_sort_within_sections = True
honor_noqa = True
lines_between_sections = 0
profile = black
reverse_relative = True
sort_relative_in_force_sorted_sections = True
{% if not is_flat_module %}
src_paths = src
{% endif %}
{% if has_docs %}

[testenv:docs]
basepython = python3
deps = -rdocs/requirements.txt
changedir = docs
commands = sphinx-build -E -W -b html . _build/html
{% endif %}
